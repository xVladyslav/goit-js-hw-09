{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA/CPJ,EAAAY,OAAOC,KAAK,CACVC,SAAS,IAGEC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBhB,MAAOqB,EAASL,EAATK,KAEjBC,EAAcC,SAASJ,EAAOK,OAC9BC,EAAaF,SAASH,EAAMI,OAC5BE,EAAYH,SAASF,EAAKG,OAEhC,GAAIF,GAAe,EAGjB,YAFA1B,EAAAY,OAAOmB,QAAQ,kCAKjB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CAGpC9B,EAAc8B,EAFUH,EAAaG,EAAIF,GAGtCG,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjBJ,EAAAY,OAAOuB,QAAQ,uBAA4CC,OAAnBjC,EAAW,EAAE,QAAYiC,OAANhC,EAAM,M,IAElEiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClBJ,EAAAY,OAAO0B,QAAQ,sBAAyCF,OAAnBjC,EAAW,EAAE,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  useIcon: false\n});\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit)\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const { amount, delay, step } = e.target.elements;\n  \n  const amountValue = parseInt(amount.value);\n  const delayValue = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n\n  if (amountValue <= 0) {\n    Notify.warning('Amount has to be bigger than 0');\n\n    return;\n  }\n\n  for (let i = 0; i < amountValue; i++) {\n    const calculatedDelay = delayValue + i * stepValue;\n\n    createPromise(i, calculatedDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`)\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","init","useIcon","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","amount","delay1","step","amountValue","parseInt","value","delayValue","stepValue","warning","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.26ffecff.js.map"}